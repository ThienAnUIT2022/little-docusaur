"use strict";(self.webpackChunklittle_docusaur=self.webpackChunklittle_docusaur||[]).push([[3748],{6516:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>o,frontMatter:()=>l,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"endpoint-security/ClamAV-report","title":"ClamAV Reporting","description":"Ti\u1ebfp n\u1ed1i b\xe0i th\u1eed nghi\u1ec7m kh\u1ea3 n\u0103ng ph\xe1t hi\u1ec7n malware c\u1ee7a ClamAV l\u1ea7n tr\u01b0\u1edbc, b\xe0i n\xe0y tr\xecnh b\xe0y chi ti\u1ebft v\u1ec1 c\xe1ch c\u1ea5u h\xecnh v\xe0 s\u1eed d\u1ee5ng ClamAV \u0111\u1ec3 qu\xe9t th\u1eddi gian th\u1ef1c tr\xean Linux v\xe0 qu\xe9t t\u1ef1 \u0111\u1ed9ng tr\xean Windows.","source":"@site/docs/endpoint-security/ClamAV-report.md","sourceDirName":"endpoint-security","slug":"/endpoint-security/ClamAV-report","permalink":"/docs/endpoint-security/ClamAV-report","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/endpoint-security/ClamAV-report.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"ClamAV Reporting","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"ClamAV Testing on Windows and Kali","permalink":"/docs/endpoint-security/ClamAV-testing"},"next":{"title":"ClamAV - Open-source Anti-virus","permalink":"/docs/endpoint-security/ClamAV"}}');var c=s(4848),t=s(8453);const l={title:"ClamAV Reporting",sidebar_position:6},r=void 0,a={},h=[{value:"1. C\u1ea5u h\xecnh v\xe0 s\u1eed d\u1ee5ng tr\xean Kali Linux",id:"1-c\u1ea5u-h\xecnh-v\xe0-s\u1eed-d\u1ee5ng-tr\xean-kali-linux",level:2},{value:"1.1. Qu\u1ea3n l\xfd services v\xe0 c\u1ea5u h\xecnh",id:"11-qu\u1ea3n-l\xfd-services-v\xe0-c\u1ea5u-h\xecnh",level:3},{value:"1.2. Qu\xe9t theo y\xeau c\u1ea7u (On-Demand Scan)",id:"12-qu\xe9t-theo-y\xeau-c\u1ea7u-on-demand-scan",level:3},{value:"1.3. Qu\xe9t th\u1eddi gian th\u1ef1c (On-Access Scanning)",id:"13-qu\xe9t-th\u1eddi-gian-th\u1ef1c-on-access-scanning",level:3},{value:"2. C\u1ea5u h\xecnh v\xe0 s\u1eed d\u1ee5ng tr\xean Windows",id:"2-c\u1ea5u-h\xecnh-v\xe0-s\u1eed-d\u1ee5ng-tr\xean-windows",level:2},{value:"2.1. Qu\xe9t t\u1ef1 \u0111\u1ed9ng \u0111\u1ecbnh k\u1ef3 (Scheduled Scan)",id:"21-qu\xe9t-t\u1ef1-\u0111\u1ed9ng-\u0111\u1ecbnh-k\u1ef3-scheduled-scan",level:3},{value:"2.2. Qu\xe9t USB t\u1ef1 \u0111\u1ed9ng khi c\u1eafm",id:"22-qu\xe9t-usb-t\u1ef1-\u0111\u1ed9ng-khi-c\u1eafm",level:3},{value:"2.2.1. T\u1ea1o PowerShell script &amp; batch wrapper",id:"221-t\u1ea1o-powershell-script--batch-wrapper",level:4},{value:"2.2.2. C\u1ea5u h\xecnh Task Scheduler",id:"222-c\u1ea5u-h\xecnh-task-scheduler",level:4},{value:"2.2.3. M\u1ed9t s\u1ed1 l\u1ed7i \u0111\xe3 g\u1eb7p",id:"223-m\u1ed9t-s\u1ed1-l\u1ed7i-\u0111\xe3-g\u1eb7p",level:4},{value:"K\u1ebft lu\u1eadn",id:"k\u1ebft-lu\u1eadn",level:2}];function d(n){const e={blockquote:"blockquote",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...n.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(e.p,{children:["Ti\u1ebfp n\u1ed1i b\xe0i th\u1eed nghi\u1ec7m kh\u1ea3 n\u0103ng ph\xe1t hi\u1ec7n malware c\u1ee7a ClamAV l\u1ea7n tr\u01b0\u1edbc, b\xe0i n\xe0y tr\xecnh b\xe0y chi ti\u1ebft v\u1ec1 c\xe1ch c\u1ea5u h\xecnh v\xe0 s\u1eed d\u1ee5ng ClamAV \u0111\u1ec3 qu\xe9t ",(0,c.jsx)(e.strong,{children:"th\u1eddi gian th\u1ef1c"})," tr\xean Linux v\xe0 qu\xe9t ",(0,c.jsx)(e.strong,{children:"t\u1ef1 \u0111\u1ed9ng"})," tr\xean Windows."]}),"\n",(0,c.jsx)(e.hr,{}),"\n",(0,c.jsx)(e.h2,{id:"1-c\u1ea5u-h\xecnh-v\xe0-s\u1eed-d\u1ee5ng-tr\xean-kali-linux",children:"1. C\u1ea5u h\xecnh v\xe0 s\u1eed d\u1ee5ng tr\xean Kali Linux"}),"\n",(0,c.jsx)(e.h3,{id:"11-qu\u1ea3n-l\xfd-services-v\xe0-c\u1ea5u-h\xecnh",children:"1.1. Qu\u1ea3n l\xfd services v\xe0 c\u1ea5u h\xecnh"}),"\n",(0,c.jsx)(e.p,{children:"Sau khi c\xe0i \u0111\u1eb7t ClamAV, s\u1ebd c\xf3 ba d\u1ecbch v\u1ee5 ch\xednh ph\u1ee5c v\u1ee5 cho c\u1ea3 c\u1eadp nh\u1eadt database, qu\xe9t theo y\xeau c\u1ea7u v\xe0 qu\xe9t th\u1eddi gian th\u1ef1c:"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:"sudo systemctl status clamav-freshclam.service    # c\u1eadp nh\u1eadt signature DB\nsudo systemctl status clamav-daemon.service       # d\u1ecbch v\u1ee5 qu\xe9t n\u1ec1n\nsudo systemctl status clamav-onacc.service        # qu\xe9t th\u1eddi gian th\u1ef1c\n"})}),"\n",(0,c.jsx)(e.p,{children:"Tr\u01b0\u1edbc khi ch\u1ec9nh s\u1eeda, h\xe3y backup hai file c\u1ea5u h\xecnh quan tr\u1ecdng:"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:"sudo cp /etc/clamav/clamd.conf ~/clamav-config-backup/\nsudo cp /etc/systemd/system/clamav-onacc.service ~/clamav-config-backup/\n"})}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:(0,c.jsx)(e.code,{children:"/etc/clamav/clamd.conf"})}),": C\u1ea5u h\xecnh ClamD (daemon qu\xe9t n\u1ec1n)."]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:(0,c.jsx)(e.code,{children:"/etc/systemd/system/clamav-onacc.service"})}),": C\u1ea5u h\xecnh d\u1ecbch v\u1ee5 On-Access Scanning."]}),"\n"]}),"\n",(0,c.jsx)(e.h3,{id:"12-qu\xe9t-theo-y\xeau-c\u1ea7u-on-demand-scan",children:"1.2. Qu\xe9t theo y\xeau c\u1ea7u (On-Demand Scan)"}),"\n",(0,c.jsx)(e.p,{children:"L\u1ec7nh qu\xe9t c\u01a1 b\u1ea3n:"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:"clamscan [options] [file|directory|-]\n"})}),"\n",(0,c.jsxs)(e.p,{children:["V\xed d\u1ee5 minh h\u1ecda c\xe1c nh\xf3m t\xf9y ch\u1ecdn:",(0,c.jsx)(e.br,{}),"\n",(0,c.jsx)(e.img,{alt:"scan_opt1",src:s(5686).A+"",width:"960",height:"344"}),(0,c.jsx)(e.br,{}),"\n",(0,c.jsx)(e.img,{alt:"scan_opt2",src:s(3245).A+"",width:"969",height:"270"}),(0,c.jsx)(e.br,{}),"\n",(0,c.jsx)(e.img,{alt:"scan_opt3",src:s(212).A+"",width:"960",height:"222"})]}),"\n",(0,c.jsx)(e.p,{children:"V\xe0 v\xed d\u1ee5 th\u1ef1c thi:"}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{alt:"clamscan1",src:s(9264).A+"",width:"960",height:"338"})}),"\n",(0,c.jsx)(e.h3,{id:"13-qu\xe9t-th\u1eddi-gian-th\u1ef1c-on-access-scanning",children:"1.3. Qu\xe9t th\u1eddi gian th\u1ef1c (On-Access Scanning)"}),"\n",(0,c.jsxs)(e.blockquote,{children:["\n",(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.strong,{children:"L\u01b0u \xfd"}),": T\xednh n\u0103ng ch\u1ec9 h\u1ed7 tr\u1ee3 Linux v\u1edbi kernel c\xf3 ",(0,c.jsx)(e.strong,{children:"fanotify"})," enabled."]}),"\n"]}),"\n",(0,c.jsxs)(e.ol,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsx)(e.p,{children:"Ki\u1ec3m tra fanotify:"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:"grep FANOTIFY /boot/config-$(uname -r)\n"})}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:(0,c.jsx)(e.code,{children:"CONFIG_FANOTIFY=y"})}),"\n",(0,c.jsx)(e.li,{children:(0,c.jsx)(e.code,{children:"CONFIG_FANOTIFY_ACCESS_PERMISSIONS=y"})}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["C\u1ea5u h\xecnh ",(0,c.jsx)(e.code,{children:"/etc/clamav/clamd.conf"}),":",(0,c.jsx)(e.br,{}),"\n",(0,c.jsx)(e.img,{alt:"clamd.conf",src:s(5230).A+"",width:"1176",height:"774"})]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["Script th\xf4ng b\xe1o thay th\u1ebf (",(0,c.jsx)(e.code,{children:"/etc/clamav/detected.sh"}),"):"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:' #!/bin/bash\n\n export LOG="/var/log/clamav/scan.log"\n export TARGET="/"\n export SUMMARY_FILE=`mktemp`\n\n export SCAN_STATUS\n export INFECTED_SUMMARY\n export XUSERS\n\n echo "------------ SCAN START ------------" >> "$LOG"\n echo "Running scan on `date`" >> "$LOG"\n\n sudo clamdscan --log "$LOG" --infected --multiscan --fdpass "$TARGET" > "$SUMMARY_FILE"\n\n SCAN_STATUS="$?"\n INFECTED_SUMMARY=`cat $SUMMARY_FILE | grep Infected`\n rm "$SUMMARY_FILE"\n\n if [[ "$SCAN_STATUS" -ne "0" ]] ; then\n\n   # Send the alert to systemd logger if exist\n   if [[ -n $(command -v systemd-cat) ]] ; then\n     echo "Virus signature found - $INFECTED_SUMMARY" | /usr/bin/systemd-cat -t clamav -p emerg\n   fi\n\n   # Send an alert to all graphical users.\n   XUSERS=($(who|awk \'{print $1$NF}\'|sort -u))\n   for XUSER in $XUSERS; do\n     NAME=(${XUSER/(/ })\n     DISPLAY=${NAME[1]/)/}\n     DBUS_ADDRESS=unix:path=/run/user/$(id -u ${NAME[0]})/bus\n     echo "run $NAME - $DISPLAY - $DBUS_ADDRESS -" >> /tmp/testlog\n     /usr/bin/sudo -u ${NAME[0]} DISPLAY=${DISPLAY} \\\n       DBUS_SESSION_BUS_ADDRESS=${DBUS_ADDRESS} \\\n       PATH=${PATH} \\\n       /usr/bin/notify-send -i security-low "Virus signature(s) found" "$INFECTED_SUMMARY"\n   done\n\n fi\n'})}),"\n",(0,c.jsx)(e.p,{children:"C\u1eadp nh\u1eadt quy\u1ec1n th\u1ef1c thi cho script."}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:"sudo chmod +x /etc/clamav/detected.sh\n"})}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["C\u1ea5u h\xecnh service On-Access:",(0,c.jsx)(e.br,{}),"\n",(0,c.jsx)(e.img,{alt:"clam-onacc.service",src:s(8743).A+"",width:"961",height:"408"})]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsx)(e.p,{children:"Kh\u1edfi \u0111\u1ed9ng v\xe0 b\u1eadt auto-start:"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:"sudo systemctl enable clamav-onacc.service\nsudo systemctl start clamav-onacc.service\nsudo systemctl status clamav-onacc.service\n"})}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsx)(e.p,{children:"Theo d\xf5i log realtime:"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:'tail -f /var/log/clamav/clamav.log\n# ho\u1eb7c\ngrep "FOUND" /var/log/clamav/clamav.log\n'})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{alt:"linux realtime scan",src:s(4274).A+"",width:"960",height:"711"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.hr,{}),"\n",(0,c.jsx)(e.h2,{id:"2-c\u1ea5u-h\xecnh-v\xe0-s\u1eed-d\u1ee5ng-tr\xean-windows",children:"2. C\u1ea5u h\xecnh v\xe0 s\u1eed d\u1ee5ng tr\xean Windows"}),"\n",(0,c.jsx)(e.h3,{id:"21-qu\xe9t-t\u1ef1-\u0111\u1ed9ng-\u0111\u1ecbnh-k\u1ef3-scheduled-scan",children:"2.1. Qu\xe9t t\u1ef1 \u0111\u1ed9ng \u0111\u1ecbnh k\u1ef3 (Scheduled Scan)"}),"\n",(0,c.jsxs)(e.p,{children:["T\u1ea1o file batch ",(0,c.jsx)(e.code,{children:"clamscan_daily.bat"}),":"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bat",children:'@echo off\n"C:\\Program Files\\ClamAV\\clamscan.exe" --recursive --infected --log="C:\\clamav_logs\\scan_%date%.log" C:\\Users\n'})}),"\n",(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.strong,{children:"Task Scheduler"}),":"]}),"\n",(0,c.jsxs)(e.ol,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.strong,{children:"Create Basic Task"})," \u201cDaily ClamAV Scan\u201d"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["Triggers \u2192 ",(0,c.jsx)(e.strong,{children:"Daily"})," \u2192 ch\u1ecdn th\u1eddi gian, l\u1eb7p l\u1ea1i theo kho\u1ea3ng."]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["Actions \u2192 ",(0,c.jsx)(e.strong,{children:"Start a program"})," \u2192 tr\u1ecf t\u1edbi ",(0,c.jsx)(e.code,{children:"clamscan_daily.bat"}),"."]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsx)(e.p,{children:"Ch\u1ea1y th\u1eed:"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-cmd",children:'schtasks /run /tn "Daily ClamAV Scan"\n'})}),"\n",(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.img,{alt:"windows real scan",src:s(46).A+"",width:"778",height:"405"}),(0,c.jsx)(e.br,{}),"\n",(0,c.jsx)(e.img,{alt:"windows real scan log",src:s(4549).A+"",width:"1028",height:"499"})]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.h3,{id:"22-qu\xe9t-usb-t\u1ef1-\u0111\u1ed9ng-khi-c\u1eafm",children:"2.2. Qu\xe9t USB t\u1ef1 \u0111\u1ed9ng khi c\u1eafm"}),"\n",(0,c.jsx)(e.h4,{id:"221-t\u1ea1o-powershell-script--batch-wrapper",children:"2.2.1. T\u1ea1o PowerShell script & batch wrapper"}),"\n",(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.strong,{children:"usb_scan.ps1"})," (English, no Unicode):"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-powershell",children:'# Load Windows Forms library\nAdd-Type -AssemblyName System.Windows.Forms\n\n# Initialize log file\n$logFile = "C:\\clamav_logs\\usb_scan.log"\n$timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"\n"====== Script started at $timestamp ======" | Out-File -Append $logFile\n\n# Find USB drives\n$usbDrives = Get-WmiObject Win32_LogicalDisk | Where-Object { $_.DriveType -eq 2 }\n\nif ($usbDrives) {\n    foreach ($drive in $usbDrives) {\n        Write-Host "Detected USB Drive: $($drive.DeviceID)"\n        ">> Scanning drive $($drive.DeviceID)" | Out-File -Append $logFile\n\n        # Update virus database\n        & "C:\\Program Files\\ClamAV\\freshclam.exe" | Out-File -Append $logFile\n\n        # Scan the USB drive\n        $scanResult = Start-Process -FilePath "C:\\Program Files\\ClamAV\\clamscan.exe" `\n                                     -ArgumentList "--recursive --alert-broken --alert-encrypted --alert-macros --move=C:\\Users\\$env:USERNAME\\Downloads\\isolate --log=$logFile $($drive.DeviceID)\\" `\n                                     -Wait `\n                                     -PassThru\n\n        # Check the exit code\n        if ($scanResult.ExitCode -eq 1) {\n            [System.Windows.Forms.MessageBox]::Show("Virus detected on USB drive $($drive.DeviceID)! The drive will be unmounted!", "ClamAV Alert",\n            [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Warning)\n\n            # Only if virus detected, then unmount the USB drive\n            $volInfo = Get-CimInstance -ClassName Win32_Volume | Where-Object { $_.DriveLetter -eq $drive.DeviceID }\n            if ($volInfo) {\n                $guidPath = $volInfo.DeviceID\n                Write-Host "Unmounting USB: $guidPath"\n                "Unmounting USB: $guidPath" | Out-File -Append $logFile\n                mountvol.exe $($drive.DeviceID) /d\n            } else {\n                Write-Host "Failed to find volume GUID to unmount."\n                "Failed to find volume GUID to unmount." | Out-File -Append $logFile\n            }\n        } elseif ($scanResult.ExitCode -eq 0) {\n            # USB clean, show info message\n            [System.Windows.Forms.MessageBox]::Show("USB drive $($drive.DeviceID) is clean. You can use it safely.", "ClamAV Scan Result",\n            [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Information)\n        }\n    }\n} else {\n    Write-Host "No USB drive detected."\n    "No USB drive detected." | Out-File -Append $logFile\n}\n\n# Script end\n$timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"\n"====== Script ended at $timestamp ======" | Out-File -Append $logFile\n'})}),"\n",(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.strong,{children:"usb_scan.bat"}),":"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bat",children:'@echo off\npowershell.exe -ExecutionPolicy Bypass -NoProfile -File "C:\\Users\\%USERNAME%\\Desktop\\usb_scan.ps1"\n'})}),"\n",(0,c.jsx)(e.h4,{id:"222-c\u1ea5u-h\xecnh-task-scheduler",children:"2.2.2. C\u1ea5u h\xecnh Task Scheduler"}),"\n",(0,c.jsxs)(e.ol,{children:["\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Create Task"})," \u2192 Name: \u201cClamAV USB Scan\u201d"]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"General"}),": Run with highest privileges; Configure: Windows 10."]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Triggers"}),": On an event \u2192","\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["Log: ",(0,c.jsx)(e.code,{children:"Microsoft-Windows-DeviceSetupManager/Admin"})]}),"\n",(0,c.jsxs)(e.li,{children:["Source: ",(0,c.jsx)(e.code,{children:"Microsoft-Windows-DeviceSetupManager"})]}),"\n",(0,c.jsxs)(e.li,{children:["Event ID: ",(0,c.jsx)(e.code,{children:"131"})]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Actions"}),": Start a program \u2192 ",(0,c.jsx)(e.code,{children:"usb_scan_safe.bat"}),"."]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Conditions"}),": (tu\u1ef3 ch\u1ecdn) AC power only."]}),"\n",(0,c.jsxs)(e.li,{children:["Ki\u1ec3m tra k\u1ebft qu\u1ea3:","\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["USB clean: ",(0,c.jsx)(e.img,{alt:"usb scan clean",src:s(8284).A+"",width:"1200",height:"582"})]}),"\n",(0,c.jsxs)(e.li,{children:["USB nhi\u1ec5m: ",(0,c.jsx)(e.img,{alt:"usb scan mal",src:s(4265).A+"",width:"960",height:"470"})]}),"\n",(0,c.jsxs)(e.li,{children:["Log: ",(0,c.jsx)(e.img,{alt:"usb scan log",src:s(2065).A+"",width:"865",height:"625"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.h4,{id:"223-m\u1ed9t-s\u1ed1-l\u1ed7i-\u0111\xe3-g\u1eb7p",children:"2.2.3. M\u1ed9t s\u1ed1 l\u1ed7i \u0111\xe3 g\u1eb7p"}),"\n",(0,c.jsxs)(e.table,{children:[(0,c.jsx)(e.thead,{children:(0,c.jsxs)(e.tr,{children:[(0,c.jsx)(e.th,{children:"L\u1ed7i"}),(0,c.jsx)(e.th,{children:"Nguy\xean nh\xe2n"}),(0,c.jsx)(e.th,{children:"\u1ea2nh h\u01b0\u1edfng"})]})}),(0,c.jsxs)(e.tbody,{children:[(0,c.jsxs)(e.tr,{children:[(0,c.jsx)(e.td,{children:"win32_openat: Failed..."}),(0,c.jsx)(e.td,{children:"File path qu\xe1 d\xe0i / file locked / permission deny"}),(0,c.jsx)(e.td,{children:"ClamAV kh\xf4ng l\u1ea5y metadata file"})]}),(0,c.jsxs)(e.tr,{children:[(0,c.jsx)(e.td,{children:"ERROR: Can't unlink '...' after copy"}),(0,c.jsxs)(e.td,{children:[(0,c.jsx)(e.code,{children:"--move"})," c\u1ed1 x\xf3a file g\u1ed1c nh\u01b0ng th\u1ea5t b\u1ea1i do lock / path qu\xe1 d\xe0i"]}),(0,c.jsx)(e.td,{children:"File malware v\u1eabn t\u1ed3n tr\xean USB"})]})]})]}),"\n",(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.strong,{children:"Kh\u1eafc ph\u1ee5c"}),":"]}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["Kh\xf4ng d\xf9ng ",(0,c.jsx)(e.code,{children:"--move"})," ho\u1eb7c ",(0,c.jsx)(e.code,{children:"--remove"}),"."]}),"\n",(0,c.jsx)(e.li,{children:"B\u1eadt LongPathsEnabled trong registry."}),"\n",(0,c.jsx)(e.li,{children:"(T\xf9y ch\u1ecdn) Th\xeam b\u01b0\u1edbc x\xf3a file b\u1eb1ng PowerShell n\u1ebfu di chuy\u1ec3n kh\xf4ng th\xe0nh c\xf4ng."}),"\n"]}),"\n",(0,c.jsx)(e.hr,{}),"\n",(0,c.jsx)(e.h2,{id:"k\u1ebft-lu\u1eadn",children:"K\u1ebft lu\u1eadn"}),"\n",(0,c.jsx)(e.p,{children:"Trong b\xe0i n\xe0y, t\xf4i \u0111\xe3:"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"Thi\u1ebft l\u1eadp"})," ClamAV qu\xe9t th\u1eddi gian th\u1ef1c tr\xean Linux v\u1edbi ",(0,c.jsx)(e.code,{children:"clamd"})," + ",(0,c.jsx)(e.code,{children:"clamonacc"}),"."]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"T\xf9y ch\u1ec9nh"})," th\xf4ng b\xe1o b\u1eb1ng script ",(0,c.jsx)(e.code,{children:"detected.sh"}),"."]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"L\u1eadp l\u1ecbch"})," qu\xe9t \u0111\u1ecbnh k\u1ef3 tr\xean Windows b\u1eb1ng Task Scheduler."]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.strong,{children:"T\u1ef1 \u0111\u1ed9ng qu\xe9t USB"})," khi c\u1eafm v\xe0o, ph\xe1t hi\u1ec7n malware, v\xe0 c\xe1ch ly \u1ed5 \u0111\u0129a."]}),"\n"]}),"\n",(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.strong,{children:"\u0110\xe3 ho\xe0n th\xe0nh"}),":"]}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"C\u1ea5u h\xecnh services v\xe0 file config tr\xean Kali."}),"\n",(0,c.jsx)(e.li,{children:"Script PowerShell & Task \u0111\u1ec3 qu\xe9t USB an to\xe0n tr\xean Windows."}),"\n",(0,c.jsx)(e.li,{children:"X\u1eed l\xfd b\xe1o c\xe1o ph\xe1t hi\u1ec7n, c\xe1ch ly file v\xe0 unmount USB."}),"\n"]}),"\n",(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.strong,{children:"V\u1eabn c\xf2n h\u1ea1n ch\u1ebf"}),":"]}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"M\u1ed9t s\u1ed1 file malware kh\xf4ng th\u1ec3 x\xf3a do path qu\xe1 d\xe0i ho\u1eb7c file locked."}),"\n",(0,c.jsx)(e.li,{children:"C\u1ea7n b\u1ed5 sung b\u01b0\u1edbc x\xf3a th\u1ee7 c\xf4ng qua PowerShell."}),"\n",(0,c.jsx)(e.li,{children:"Qu\xe9t realtime tr\xean Windows v\u1eabn ph\u1ee5 thu\u1ed9c script ch\u1ee9 kh\xf4ng native."}),"\n"]}),"\n",(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.strong,{children:"Nh\u1eadn x\xe9t"}),":",(0,c.jsx)(e.br,{}),"\n","Tr\xean Linux, ClamAV cung c\u1ea5p qu\xe9t realtime m\u1ea1nh m\u1ebd nh\u1edd fanotify. Tr\xean Windows, ph\u1ea3i d\xf9ng Task Scheduler k\u1ebft h\u1ee3p PowerShell \u0111\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c t\u1ef1 \u0111\u1ed9ng h\xf3a, v\u1eabn c\xf2n m\u1ed9t s\u1ed1 gi\u1edbi h\u1ea1n v\u1ec1 x\xf3a file locked v\xe0 path d\xe0i. Tuy nhi\xean, v\u1edbi c\xe1c th\u1ee7 thu\u1eadt b\u1ed5 sung (LongPaths, script ph\u1ee5 tr\u1ee3), ClamAV v\u1eabn l\xe0 m\u1ed9t gi\u1ea3i ph\xe1p hi\u1ec7u qu\u1ea3, chi ph\xed th\u1ea5p cho nhu c\u1ea7u qu\xe9t t\u1ef1 \u0111\u1ed9ng v\xe0 gi\xe1m s\xe1t USB."]})]})}function o(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,c.jsx)(e,{...n,children:(0,c.jsx)(d,{...n})}):d(n)}},8743:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/clam-onacc-11753ec5b30a35b452ee29f6873f2d8e.png"},5686:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/clamav-opt1-f23c0e3f7baeab27a82354c8966e292e.png"},3245:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/clamav-opt2-07e74e188665f75d1d03b956c71d30e9.png"},212:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/clamav-opt3-0d7e49565603d26f25c6969b08f801c9.png"},5230:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/clamdconf-e68c5084f954562c6a855c719911bb0e.png"},9264:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/clamscan1-fb97d023bf61c008bb438e91f6a54982.png"},4274:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/linux_real_scan-2ff64753f0c59c9468f5de7818ce2815.png"},46:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/win_real_scan-982e1b70eae2c237f2f884fcfdb057a7.png"},4549:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/win_real_scan_log-2eb0f83443006c74b4c093a0a7f1b621.png"},8284:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/win_usb_scan_clean-1d16534fe312938184374602dbe07be3.png"},2065:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/win_usb_scan_log-25540048ed69d9cd7b587a7cf1216b48.png"},4265:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/win_usb_scan_mal-e4f4195e1ad1398f2821da361b8aa40d.png"},8453:(n,e,s)=>{s.d(e,{R:()=>l,x:()=>r});var i=s(6540);const c={},t=i.createContext(c);function l(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:l(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);